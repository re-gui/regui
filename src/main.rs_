

pub fn main() -> Result<(), Box<dyn std::error::Error>> {
    println!("Hello, world!");

    Ok(())
}

struct TwoDivs {
    div1: Div,
    div2: Div,
}

impl Component<HtmlDomContext> for TwoDivs {
    fn show(&mut self, visitor: &mut HtmlVDomVisitor) {
        //visitor.component::<Div>();
        //visitor.component::<Div>();
        self.div1.show(visitor);
        self.div2.show(visitor);
    }
}

struct Div;

impl Component<HtmlDomContext> for Div {
    fn show(&mut self, visitor: &mut HtmlVDomVisitor) {
    }
}

struct HtmlDomContext;

impl Context for HtmlDomContext {
    type Visitor = HtmlVDomVisitor;
}

struct HtmlVDomVisitor {
}

impl HtmlVDomVisitor {
}

impl VDomVisitor for HtmlVDomVisitor {
}



//trait NativeElement {
//}

